{"version":3,"file":"react-image.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { FC, HTMLAttributes, FunctionComponent } from 'react';\n\nexport interface CrystallizeImageVariant {\n  url: string;\n  width: number;\n  height?: number;\n  size?: number;\n}\n\ninterface RichTextContent {\n  html?: Array<string>;\n  json?: Array<any>;\n  plainText?: Array<string>;\n}\n\nexport interface Props extends HTMLAttributes<HTMLImageElement> {\n  children?: FunctionComponent<any>;\n  src?: string;\n  url?: string;\n  sizes?: string;\n  altText?: string;\n  alt?: string;\n  media?: string;\n  // The `html` content has higher priority than `plainText` because it has richer content.\n  // In case of getting both, the `html` is the one that will be displayed.\n  caption?: RichTextContent;\n  variants?: CrystallizeImageVariant[];\n  loading?: 'eager' | 'lazy';\n  _availableSizes?: number[];\n  _availableFormats?: string[];\n}\n\nfunction getVariantSrc(variant: CrystallizeImageVariant): string {\n  return `${variant.url} ${variant.width}w`;\n}\n\nexport const Image: FC<Props> = ({ children, ...restOfAllProps }) => {\n  const {\n    src,\n    url,\n    sizes,\n    variants,\n    altText,\n    alt: altPassed,\n    caption,\n    className,\n    media,\n    _availableSizes,\n    _availableFormats,\n    ...rest\n  } = restOfAllProps;\n\n  let vars = (variants || []).filter((v) => !!v);\n  const alt = typeof altPassed === 'string' ? altPassed : altText;\n\n  // Naive rendering POC\n  if (url && _availableSizes && _availableFormats) {\n    vars = [];\n    const urlWithoutFileExtension = url.replace(/\\.[^/]+$/, '');\n    const match = urlWithoutFileExtension.match(/(.+)(\\/)([^/]+)$/);\n    if (match) {\n      const [, base, , filename] = match;\n\n      _availableSizes.forEach((size) => {\n        _availableFormats.forEach((format) => {\n          vars.push({\n            url: `${base}/@${size}/${filename}.${format}`,\n            width: size,\n          });\n        });\n      });\n    }\n  }\n\n  const hasVariants = vars.length > 0;\n\n  // Get the biggest image from the variants\n  let biggestImage: CrystallizeImageVariant = vars[0];\n  if (hasVariants) {\n    biggestImage = vars.reduce(function (\n      acc: CrystallizeImageVariant,\n      v: CrystallizeImageVariant\n    ): CrystallizeImageVariant {\n      if (!acc.width || v.width > acc.width) {\n        return v;\n      }\n      return acc;\n    },\n    vars[0]);\n  }\n\n  // Determine srcSet\n  const std = vars.filter(\n    (v) => v.url && !v.url.endsWith('.webp') && !v.url.endsWith('.avif')\n  );\n  const webp = vars.filter((v) => v.url && v.url.endsWith('.webp'));\n  const avif = vars.filter((v) => v.url && v.url.endsWith('.avif'));\n  const srcSet = std.map(getVariantSrc).join(', ');\n  const srcSetWebp = webp.map(getVariantSrc).join(', ');\n  const srcSetAvif = avif.map(getVariantSrc).join(', ');\n\n  // Determine the original file extension\n  let originalFileExtension = 'jpeg';\n  if (std.length > 0) {\n    const match = std[0].url.match(/\\.(?<name>[^.]+)$/);\n    originalFileExtension = match?.groups?.name || 'jpeg';\n\n    // Provide correct mime type for jpg\n    if (originalFileExtension === 'jpg') {\n      originalFileExtension = 'jpeg';\n    }\n  }\n\n  const commonProps = {\n    // Ensure fallback src for older browsers\n    src: src || url || (hasVariants ? std[0].url : undefined),\n    alt,\n    caption,\n    width: biggestImage?.width,\n    height: biggestImage?.height,\n  };\n\n  let useWebP = srcSetWebp.length > 0;\n  let useAvif = srcSetAvif.length > 0;\n\n  /**\n   * Only output Avif format if it is smaller than\n   * webP. For the future: show only one of them when\n   * the browser support for Avif is good enough\n   */\n  if (useWebP && useAvif) {\n    const [firstWebp] = webp;\n    const [firstAvif] = avif;\n    if (firstWebp.size && firstAvif.size) {\n      useAvif = firstWebp.size > firstAvif.size;\n    }\n  }\n\n  if (children) {\n    return children({\n      srcSet,\n      srcSetWebp,\n      srcSetAvif,\n      useAvif,\n      useWebP,\n      className,\n      sizes,\n      media,\n      ...commonProps,\n      ...rest,\n      originalFileExtension,\n    });\n  }\n\n  const captionString = caption?.html?.[0] || caption?.plainText?.[0] || '';\n\n  return (\n    <figure className={className}>\n      <picture>\n        {useAvif && (\n          <source\n            srcSet={srcSetAvif}\n            type=\"image/avif\"\n            sizes={sizes}\n            media={media}\n          />\n        )}\n        {useWebP && (\n          <source\n            srcSet={srcSetWebp}\n            type=\"image/webp\"\n            sizes={sizes}\n            media={media}\n          />\n        )}\n        {srcSet.length > 0 && (\n          <source\n            srcSet={srcSet}\n            type={`image/${originalFileExtension}`}\n            sizes={sizes}\n            media={media}\n          />\n        )}\n        {/* eslint-disable-next-line jsx-a11y/alt-text */}\n        <img {...commonProps} {...rest} />\n      </picture>\n      {captionString && (\n        <figcaption dangerouslySetInnerHTML={{ __html: captionString }} />\n      )}\n    </figure>\n  );\n};\n"],"names":["getVariantSrc","variant","url","width","Image","children","restOfAllProps","src","sizes","variants","altText","altPassed","alt","caption","className","media","_availableSizes","_availableFormats","rest","vars","filter","v","urlWithoutFileExtension","replace","match","base","filename","forEach","size","format","push","hasVariants","length","biggestImage","reduce","acc","std","endsWith","webp","avif","srcSet","map","join","srcSetWebp","srcSetAvif","originalFileExtension","groups","name","commonProps","undefined","height","useWebP","useAvif","firstWebp","firstAvif","captionString","html","plainText","React","type","dangerouslySetInnerHTML","__html"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,SAASA,aAAT,CAAuBC,OAAvB;AACE,SAAUA,OAAO,CAACC,GAAlB,SAAyBD,OAAO,CAACE,KAAjC;AACD;;IAEYC,KAAK,GAAc,SAAnBA,KAAmB;;;MAAGC,gBAAAA;MAAaC;;AAC9C,MACEC,GADF,GAaID,cAbJ,CACEC,GADF;AAAA,MAEEL,GAFF,GAaII,cAbJ,CAEEJ,GAFF;AAAA,MAGEM,KAHF,GAaIF,cAbJ,CAGEE,KAHF;AAAA,MAIEC,QAJF,GAaIH,cAbJ,CAIEG,QAJF;AAAA,MAKEC,OALF,GAaIJ,cAbJ,CAKEI,OALF;AAAA,MAMOC,SANP,GAaIL,cAbJ,CAMEM,GANF;AAAA,MAOEC,OAPF,GAaIP,cAbJ,CAOEO,OAPF;AAAA,MAQEC,SARF,GAaIR,cAbJ,CAQEQ,SARF;AAAA,MASEC,KATF,GAaIT,cAbJ,CASES,KATF;AAAA,MAUEC,eAVF,GAaIV,cAbJ,CAUEU,eAVF;AAAA,MAWEC,iBAXF,GAaIX,cAbJ,CAWEW,iBAXF;AAAA,MAYKC,IAZL,iCAaIZ,cAbJ;;AAeA,MAAIa,IAAI,GAAG,CAACV,QAAQ,IAAI,EAAb,EAAiBW,MAAjB,CAAwB,UAACC,CAAD;AAAA,WAAO,CAAC,CAACA,CAAT;AAAA,GAAxB,CAAX;AACA,MAAMT,GAAG,GAAG,OAAOD,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4CD,OAAxD;;AAGA,MAAIR,GAAG,IAAIc,eAAP,IAA0BC,iBAA9B,EAAiD;AAC/CE,IAAAA,IAAI,GAAG,EAAP;AACA,QAAMG,uBAAuB,GAAGpB,GAAG,CAACqB,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAhC;AACA,QAAMC,KAAK,GAAGF,uBAAuB,CAACE,KAAxB,CAA8B,kBAA9B,CAAd;;AACA,QAAIA,KAAJ,EAAW;AACT,UAASC,IAAT,GAA6BD,KAA7B;AAAA,UAAiBE,QAAjB,GAA6BF,KAA7B;;AAEAR,MAAAA,eAAe,CAACW,OAAhB,CAAwB,UAACC,IAAD;AACtBX,QAAAA,iBAAiB,CAACU,OAAlB,CAA0B,UAACE,MAAD;AACxBV,UAAAA,IAAI,CAACW,IAAL,CAAU;AACR5B,YAAAA,GAAG,EAAKuB,IAAL,UAAcG,IAAd,SAAsBF,QAAtB,SAAkCG,MAD7B;AAER1B,YAAAA,KAAK,EAAEyB;AAFC,WAAV;AAID,SALD;AAMD,OAPD;AAQD;AACF;;AAED,MAAMG,WAAW,GAAGZ,IAAI,CAACa,MAAL,GAAc,CAAlC;;AAGA,MAAIC,YAAY,GAA4Bd,IAAI,CAAC,CAAD,CAAhD;;AACA,MAAIY,WAAJ,EAAiB;AACfE,IAAAA,YAAY,GAAGd,IAAI,CAACe,MAAL,CAAY,UACzBC,GADyB,EAEzBd,CAFyB;AAIzB,UAAI,CAACc,GAAG,CAAChC,KAAL,IAAckB,CAAC,CAAClB,KAAF,GAAUgC,GAAG,CAAChC,KAAhC,EAAuC;AACrC,eAAOkB,CAAP;AACD;;AACD,aAAOc,GAAP;AACD,KARc,EASfhB,IAAI,CAAC,CAAD,CATW,CAAf;AAUD;;;AAGD,MAAMiB,GAAG,GAAGjB,IAAI,CAACC,MAAL,CACV,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACnB,GAAF,IAAS,CAACmB,CAAC,CAACnB,GAAF,CAAMmC,QAAN,CAAe,OAAf,CAAV,IAAqC,CAAChB,CAAC,CAACnB,GAAF,CAAMmC,QAAN,CAAe,OAAf,CAA7C;AAAA,GADU,CAAZ;AAGA,MAAMC,IAAI,GAAGnB,IAAI,CAACC,MAAL,CAAY,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACnB,GAAF,IAASmB,CAAC,CAACnB,GAAF,CAAMmC,QAAN,CAAe,OAAf,CAAhB;AAAA,GAAZ,CAAb;AACA,MAAME,IAAI,GAAGpB,IAAI,CAACC,MAAL,CAAY,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACnB,GAAF,IAASmB,CAAC,CAACnB,GAAF,CAAMmC,QAAN,CAAe,OAAf,CAAhB;AAAA,GAAZ,CAAb;AACA,MAAMG,MAAM,GAAGJ,GAAG,CAACK,GAAJ,CAAQzC,aAAR,EAAuB0C,IAAvB,CAA4B,IAA5B,CAAf;AACA,MAAMC,UAAU,GAAGL,IAAI,CAACG,GAAL,CAASzC,aAAT,EAAwB0C,IAAxB,CAA6B,IAA7B,CAAnB;AACA,MAAME,UAAU,GAAGL,IAAI,CAACE,GAAL,CAASzC,aAAT,EAAwB0C,IAAxB,CAA6B,IAA7B,CAAnB;;AAGA,MAAIG,qBAAqB,GAAG,MAA5B;;AACA,MAAIT,GAAG,CAACJ,MAAJ,GAAa,CAAjB,EAAoB;AAAA;;AAClB,QAAMR,MAAK,GAAGY,GAAG,CAAC,CAAD,CAAH,CAAOlC,GAAP,CAAWsB,KAAX,2BAAiB,wBAAjB;AAAA;AAAA,OAAd;;AACAqB,IAAAA,qBAAqB,GAAG,CAAArB,MAAK,QAAL,6BAAAA,MAAK,CAAEsB,MAAP,mCAAeC,IAAf,KAAuB,MAA/C,CAFkB;;AAKlB,QAAIF,qBAAqB,KAAK,KAA9B,EAAqC;AACnCA,MAAAA,qBAAqB,GAAG,MAAxB;AACD;AACF;;AAED,MAAMG,WAAW,GAAG;AAClB;AACAzC,IAAAA,GAAG,EAAEA,GAAG,IAAIL,GAAP,KAAe6B,WAAW,GAAGK,GAAG,CAAC,CAAD,CAAH,CAAOlC,GAAV,GAAgB+C,SAA1C,CAFa;AAGlBrC,IAAAA,GAAG,EAAHA,GAHkB;AAIlBC,IAAAA,OAAO,EAAPA,OAJkB;AAKlBV,IAAAA,KAAK,mBAAE8B,YAAF,qBAAE,cAAc9B,KALH;AAMlB+C,IAAAA,MAAM,oBAAEjB,YAAF,qBAAE,eAAciB;AANJ,GAApB;AASA,MAAIC,OAAO,GAAGR,UAAU,CAACX,MAAX,GAAoB,CAAlC;AACA,MAAIoB,OAAO,GAAGR,UAAU,CAACZ,MAAX,GAAoB,CAAlC;AAEA;;;;;;AAKA,MAAImB,OAAO,IAAIC,OAAf,EAAwB;AACtB,QAAOC,SAAP,GAAoBf,IAApB;AACA,QAAOgB,SAAP,GAAoBf,IAApB;;AACA,QAAIc,SAAS,CAACzB,IAAV,IAAkB0B,SAAS,CAAC1B,IAAhC,EAAsC;AACpCwB,MAAAA,OAAO,GAAGC,SAAS,CAACzB,IAAV,GAAiB0B,SAAS,CAAC1B,IAArC;AACD;AACF;;AAED,MAAIvB,QAAJ,EAAc;AACZ,WAAOA,QAAQ;AACbmC,MAAAA,MAAM,EAANA,MADa;AAEbG,MAAAA,UAAU,EAAVA,UAFa;AAGbC,MAAAA,UAAU,EAAVA,UAHa;AAIbQ,MAAAA,OAAO,EAAPA,OAJa;AAKbD,MAAAA,OAAO,EAAPA,OALa;AAMbrC,MAAAA,SAAS,EAATA,SANa;AAObN,MAAAA,KAAK,EAALA,KAPa;AAQbO,MAAAA,KAAK,EAALA;AARa,OASViC,WATU,EAUV9B,IAVU;AAWb2B,MAAAA,qBAAqB,EAArBA;AAXa,OAAf;AAaD;;AAED,MAAMU,aAAa,GAAG,CAAA1C,OAAO,QAAP,6BAAAA,OAAO,CAAE2C,IAAT,mCAAgB,CAAhB,OAAsB3C,OAAtB,0CAAsBA,OAAO,CAAE4C,SAA/B,qBAAsB,mBAAqB,CAArB,CAAtB,KAAiD,EAAvE;AAEA,SACEC,mBAAA,SAAA;AAAQ5C,IAAAA,SAAS,EAAEA;GAAnB,EACE4C,mBAAA,UAAA,MAAA,EACGN,OAAO,IACNM,mBAAA,SAAA;AACElB,IAAAA,MAAM,EAAEI;AACRe,IAAAA,IAAI,EAAC;AACLnD,IAAAA,KAAK,EAAEA;AACPO,IAAAA,KAAK,EAAEA;GAJT,CAFJ,EASGoC,OAAO,IACNO,mBAAA,SAAA;AACElB,IAAAA,MAAM,EAAEG;AACRgB,IAAAA,IAAI,EAAC;AACLnD,IAAAA,KAAK,EAAEA;AACPO,IAAAA,KAAK,EAAEA;GAJT,CAVJ,EAiBGyB,MAAM,CAACR,MAAP,GAAgB,CAAhB,IACC0B,mBAAA,SAAA;AACElB,IAAAA,MAAM,EAAEA;AACRmB,IAAAA,IAAI,aAAWd;AACfrC,IAAAA,KAAK,EAAEA;AACPO,IAAAA,KAAK,EAAEA;GAJT,CAlBJ,EA0BE2C,mBAAA,MAAA,oBAASV,aAAiB9B,KAA1B,CA1BF,CADF,EA6BGqC,aAAa,IACZG,mBAAA,aAAA;AAAYE,IAAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEN;AAAV;GAArC,CA9BJ,CADF;AAmCD;;;;"}