{"version":3,"file":"react-content-transformer.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  createContext,\n  useContext,\n  HTMLAttributes,\n} from 'react';\n\nimport { NodeProps, Overrides } from './types';\n\nexport { NodeProps, Overrides };\n\nexport const Renderers = {\n  link: (props: NodeProps) => (\n    <a href={props.metadata?.href}>\n      <NodeContent {...props} />\n    </a>\n  ),\n  'unordered-list': (props: NodeProps) => (\n    <ul>\n      <NodeContent {...props} />\n    </ul>\n  ),\n  'ordered-list': (props: NodeProps) => (\n    <ol>\n      <NodeContent {...props} />\n    </ol>\n  ),\n  list: (props: NodeProps) => (\n    <ul>\n      <NodeContent {...props} />\n    </ul>\n  ),\n  'list-item': (props: NodeProps) => (\n    <li>\n      <NodeContent {...props} />\n    </li>\n  ),\n  quote: (props: NodeProps) => {\n    if (props.kind === 'block') {\n      return (\n        <blockquote>\n          <NodeContent {...props} />\n        </blockquote>\n      );\n    }\n    return (\n      <q>\n        <NodeContent {...props} />\n      </q>\n    );\n  },\n  paragraph: (props: NodeProps) => (\n    <p>\n      <NodeContent {...props} />\n    </p>\n  ),\n  preformatted: (props: NodeProps) => (\n    <pre>\n      <NodeContent {...props} />\n    </pre>\n  ),\n  code: (props: NodeProps) => (\n    <code>\n      <NodeContent {...props} />\n    </code>\n  ),\n  underlined: (props: NodeProps) => (\n    <u>\n      <NodeContent {...props} />\n    </u>\n  ),\n  strong: (props: NodeProps) => (\n    <strong>\n      <NodeContent {...props} />\n    </strong>\n  ),\n  emphasized: (props: NodeProps) => (\n    <em>\n      <NodeContent {...props} />\n    </em>\n  ),\n  div: (props: NodeProps) => (\n    <div>\n      <NodeContent {...props} />\n    </div>\n  ),\n  span: (props: NodeProps) => <NodeContent {...props} />,\n  'line-break': () => <br />,\n};\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n  overrides?: Overrides | null;\n  json?: [NodeProps] | NodeProps;\n}\n\nexport const OverridesContext = createContext<Overrides | null>(null);\n\nexport const NodeContent = (props: NodeProps) => {\n  const { textContent } = props;\n\n  if (textContent) {\n    return renderTextContent(textContent);\n  }\n\n  if (props.children) {\n    return (\n      <Fragment>\n        {props.children.map((child, i) => (\n          <ContentTransformerNode key={i} {...child} />\n        ))}\n      </Fragment>\n    );\n  }\n\n  return null;\n};\n\n// Render text and convert line breaks (\\n) to <br />\nexport function renderTextContent(text: String) {\n  const partsBetweenLineBreaks = text.split(/\\n/g);\n  if (partsBetweenLineBreaks.length === 1) {\n    return <Fragment>{text}</Fragment>;\n  }\n  return (\n    <Fragment>\n      {partsBetweenLineBreaks.map((part: String, index: Number) => {\n        const key = index.toString();\n        if (index === partsBetweenLineBreaks.length - 1) {\n          return <Fragment key={key}>part</Fragment>;\n        }\n        return (\n          <Fragment key={key}>\n            {part}\n            <br />\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n}\n\nexport const ContentTransformerNode = (props: NodeProps): JSX.Element => {\n  let Renderer = Renderers.span;\n  const overrides = useContext(OverridesContext);\n\n  const { type, kind, textContent } = props;\n\n  if (type) {\n    const t = type as keyof typeof Renderers;\n    const override = overrides?.[t] as () => JSX.Element;\n\n    Renderer = override || Renderers[type as keyof typeof Renderers];\n  }\n\n  if (!Renderer) {\n    Renderer = Renderers.span;\n\n    if (type === 'container' && kind === 'block') {\n      Renderer = Renderers.div;\n    } else if (type === null && textContent) {\n      return renderTextContent(textContent);\n    }\n  }\n\n  return <Renderer {...props} />;\n};\n\nexport const ContentTransformer = ({ overrides = null, json }: Props) => {\n  if (!json) {\n    return null;\n  }\n\n  if (Array.isArray(json)) {\n    const nodes: [NodeProps] = json;\n    return (\n      <OverridesContext.Provider value={overrides}>\n        {nodes.map((j, i) => (\n          <ContentTransformerNode key={i} {...j} />\n        ))}\n      </OverridesContext.Provider>\n    );\n  }\n\n  const node: NodeProps = json;\n\n  return (\n    <OverridesContext.Provider value={overrides}>\n      <ContentTransformerNode {...node} />\n    </OverridesContext.Provider>\n  );\n};\n"],"names":["Renderers","link","props","React","href","metadata","NodeContent","list","quote","kind","paragraph","preformatted","code","underlined","strong","emphasized","div","span","OverridesContext","createContext","textContent","renderTextContent","children","Fragment","map","child","i","ContentTransformerNode","key","text","partsBetweenLineBreaks","split","length","part","index","toString","Renderer","overrides","useContext","type","t","override","ContentTransformer","json","Array","isArray","nodes","Provider","value","j","node"],"mappings":"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"}